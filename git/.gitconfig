[user]
	email = rhoulihan@purestorage.com
	name = Rory Houlihan

[init]
	defaultBranch = main

[core]
	pager = delta
    editor = nvim

[interactive]
    diffFilter = delta --color-only --features=interactive

[delta]
    navigate = true
    side-by-side = true
    features = decorations

[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-line-number-style = "#067a00"
    hunk-header-style = file line-number syntax

[merge]
    conflictstyle = diff3

# automatically launch merge tool without displaying a prompt
[mergetool]
    prompt = false

[difftool]
    prompt = false

[diff]
    colorMoved = default

[push]
	default = simple

[color]
	ui = auto

[log]
	date = local
	decorate = short

[commit]
	template = ~/.git_commit_template

[alias]
    # my awesome git log replacement
    lol  = log --graph --pretty=format:\"%C(auto)%h%d%Creset %C(cyan)(%cr)%Creset %C(green)%an <%ae>%Creset %s\"
    # same as above, but ISO date
    lold = log --graph --pretty=format:\"%C(auto)%h%d%Creset %C(cyan)(%ci)%Creset %C(green)%an <%ae>%Creset %s\"
    # use the author not the commiter
    lola  = log --graph --pretty=format:\"%C(auto)%h%d%Creset %C(cyan)(%ar)%Creset %C(green)%an <%ae>%Creset %s\"
    # same as above, but ISO date
    lolad = log --graph --pretty=format:\"%C(auto)%h%d%Creset %C(cyan)(%ci)%Creset %C(green)%an <%ae>%Creset %s\"
    # using build-in standards
    lol2 = log --oneline --graph --decorate
    # shows branches and their last commits
    lol3 = log --all --graph --decorate --oneline --simplify-by-decoration

    find = log  --pretty=\"format:%Cgreen%H %Cblue%s\" --name-status --grep
    find-full = log --grep

    # list files that have changes since REVIEW_BASE
    # REVIEW_BASE defaults to master in my bashrc and zshrc
    files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")

    # Same as files, but with a diff stat instead of just names
    stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

    # Open all files changed since REVIEW_BASE in nvim tabs
    # then run fugitives :Gdiff in each tab, and finally
    # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
    review = !nvim -p $(git files) -c \"tabdo execute 'Gvdiffsplit $REVIEW_BASE'\"

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto

[safe]
	directory = /work/purity

[reviewboard]
	url = https://codereviews.purestorage.com

[url "git@github.com:"]
	insteadOf = https://github.com/
